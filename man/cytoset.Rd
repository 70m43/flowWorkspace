% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cytoset.R
\docType{class}
\name{cytoset}
\alias{cytoset}
\title{'cytoset': a reference class for efficiently managing the data representation
of a \code{flowSet}}
\description{
This class is a container for a set of \code{cytoframe} objects, analagous to
a \code{flowSet}.
}
\details{
Similar to the distinction between the \code{cytoframe} and
\code{flowFrame} classes, the primary difference between the \code{cytoset} 
and \code{flowSet} classes is in the underlying representation of the data.
Because \code{cytoset} is a reference class, copying or subsetting a \code{cytoset}
object will return a \code{cytoset} pointing to the same underlying data. A
deep copy of the data can be obtained via the \code{\link{realize_view}} method.

There is one notable exception to the typical behavior of most methods returning a \code{cytoframe}.
The standard extraction operator (\code{[[]]}) will by default perform a deep
copy of the subset being extracted and return a \code{flowFrame}. This is for the sake of compatibility
with existing user scripts.
methods.
}
\section{Creating Objects}{


Objects can be created using \code{cytoset()} and then adding samples
by providing a cytoframe and sample name to \code{cs_add_sample}:\cr\cr

\code{
cs <- cytoset()\cr
cs_add_sample(cs, "Sample Name", cytoframe)
}

The safest and easiest way to create \code{cytoset}s directly from
\acronym{FCS} files is via the \code{\link{load_cytoset_from_fcs}} function, and
there are alternative ways to specify the files to read. See the separate
documentation for details.
}

\section{Methods}{

  \describe{

\item{[, [[}{Subsetting. \code{x[i]} where \code{i} is a scalar,
  returns a \code{cytoset} object, and \code{x[[i]]} a
  \code{\linkS4class{flowFrame}} object. In this respect the
  semantics are similar to the behavior of the subsetting operators
  for lists. \code{x[i, j]} returns a \code{cytoset} for which the
  parameters of each \code{\linkS4class{cytoframe}} have been subset
  according to \code{j}, \code{x[[i,j]]} returns the subset of a
  single \code{\linkS4class{flowFrame}} for all parameters in
  \code{j}. 
  
  The reason for the default behavior for the extraction operator \code{[[]]}
  of returning a \code{flowFrame} rather than \code{cytoframe}
  is for backwards compatibility with existing user scripts. This behavior
  can be overridden to instead return a \code{cytoframe} with the additional
  \code{returnType} argument
  
  \emph{Usage:}
  
  \code{   cytoset[i]}
  
  \code{   cytoset[i,j]}
  
  \code{   cytoset[[i]]}
  
  \code{cytoset[[i, returnType = "cytoframe"]]}
}

\item{$}{Subsetting by frame name. This will return a single
  \code{\linkS4class{cytoframe}} object. Note that names may have to
  be quoted if they are no valid R symbols
  (e.g. \code{cytoset$"sample 1"})
}

\item{colnames, colnames<-}{Extract or replace
  the \code{character} object with the (common)
  column names of all the data matrices in the
  \code{\link{cytoframe}}s.
  
  \emph{Usage:}
  
  \code{   colnames(cytoset)}
  
  \code{   colnames(cytoset) <- value}
}

\item{identifier, identifier<-}{Extract or replace the \code{name}
  item from the environment.
  
  \emph{Usage:}
  
  \code{   identifier(cytoset)}
  
  \code{   identifier(cytoset) <- value}
  
}


\item{phenoData, phenoData<-}{Extract or replace the
  \code{\link[Biobase:class.AnnotatedDataFrame]{AnnotatedDataFrame}}
  containing the phenotypic data for the whole data set. Each row
  corresponds to one of the \code{\linkS4class{cytoframe}}s.  
  The \code{sampleNames} of \code{phenoData}
  (see below) must match the names of the
  \code{\linkS4class{cytoframes}} in the \code{frames} environment.
  
  
  \emph{Usage:}
  
  \code{   phenoData(cytoset)}
  
  \code{   phenoData(cytoset) <- value}
  
}

\item{pData, pData<-}{Extract or replace the data frame (or columns
  thereof) containing actual phenotypic information from the
  \code{phenoData} of the underlying data.
  
  \emph{Usage:}
  
  \code{   pData(cytoset)}
  
  \code{   pData(cytoset)$someColumn <- value}
  
}

\item{varLabels, varLabels<-}{ \strong{Not yet implemented.}\cr
  Extract and set varLabels in the \code{\link[Biobase:class.AnnotatedDataFrame]{AnnotatedDataFrame}}
  of the \code{phenoData} of the underyling data.
  
  \emph{Usage:}
  
  \code{   varLabels(cytoset)}
  
  \code{   varLabels(cytoset) <- value}
  
}

\item{sampleNames}{Extract and replace sample names from the
  \code{phenoData}. Sample names correspond to frame
  identifiers, and replacing them will also replace the \code{GUID}
  for each cytoframe. Note that \code{sampleName} needs to be
  unique.
  
  \emph{Usage:}
  
  \code{   sampleNames(cytoset)}
  
  \code{   sampleNames(cytoset) <- value}
  
}

\item{keyword}{Extract or replace keywords specified in a character
  vector or a list from the \code{description} slot of each
  frame. See \code{\link{keyword}} for details.
  
  \emph{Usage:}
  
  \code{   keyword(cytoset, list(keywords))}
  
  \code{   keyword(cytoset, keywords)}
  
  \code{   keyword(cytoset) <- list(foo="bar") }
  
}

\item{length}{number of \code{\link{cytoframe}} objects in
  the set.
  
  \emph{Usage:}
  
  \code{   length(cytoset)}
  
}

\item{show}{display object summary.}

\item{summary}{Return descriptive statistical summary (min, max,
  mean and quantile) for each channel of each \code{\link{cytoframe}}
  
  \emph{Usage:}
  
  \code{   summary(cytoset)}
  
}


\item{fsApply}{Apply a function on all frames in a \code{cytoset}
  object. Similar to \code{\link{sapply}}, but with additional
  parameters. See separate documentation for details.
  
  \emph{Usage:}
  
  \code{   fsApply(cytoset, function, ...)}
  
  \code{   fsApply(cytoset, function, use.exprs=TRUE, ...)}
  
}

\item{compensate}{Apply a compensation matrix on all frames in a
  \code{cytoset} object. See separate documentation for details.
  
  \emph{Usage:}
  
  \code{   compensate(cytoset, matrix)}
  
}

\item{transform}{Apply a transformation function on all frames of a
  \code{cytoset} object. See separate documentation for details.
  
  \emph{Usage:}
  
  \code{   transform(cytoset, ...)}
  
}

\item{filter}{Apply a filter object on a \code{cytoset}
  object. There are methods for \code{\linkS4class{filter}}s,
  \code{\link{filterSet}}s and lists of filters. The latter has to
  be a named list, where names of the list items are matching
  sampleNames of the \code{cytoset}. See \code{\linkS4class{filter}}
  for details.
  
  \emph{Usage:}
  
  \code{   filter(cytoset, filter)}
  
  \code{   filter(cytoset, list(filters))}
  
}

\item{split}{Split all \code{cytoset} objects according to a
  \code{\link{filter}}, \code{\link{filterResult}} or a list of such
  objects, where the length of the list has to be the same as the
  length of the \code{cytoset}. This returns a list of
  \code{\linkS4class{cytoframe}}s or an object of class
  \code{cytoset} if the \code{flowSet} argument is set to
  \code{TRUE}. Alternatively, a \code{cytoset} can be split into
  separate subsets according to a factor (or any vector that can be
  coerced into factors), similar to the behaviour of
  \code{\link[base]{split}} for lists. This will return a list of
  \code{cytoset}s. See \code{\link{split}} for details.
  
  \emph{Usage:}
  
  \code{   split(cytoset, filter)}
  
  \code{   split(cytoset, filterResult)}
  
  \code{   split(cytoset, list(filters))}
  
  \code{   split(cytoset, factor)}
  
}

\item{Subset}{Returns a \code{cytoset} of
  \code{\linkS4class{cytoframe}}s that have been subset according
  to a \code{\linkS4class{filter}} or
  \code{\linkS4class{filterResult}}, or according to a list of such
  items of equal length as the \code{cytoset}.
  
  \emph{Usage:}
  
  \code{   Subset(cytoset, filter)}
  
  \code{   Subset(cytoset, filterResult)}
  
  \code{   Subset(cytoset, list(filters))}
  
}


\item{rbind2}{\strong{Not yet implemented.}\cr Combine two \code{cytoset} objects, or one
  \code{cytoset} and one \code{\linkS4class{cytoframe}} object.
  
  \emph{Usage:}
  
  \code{   rbind2(cytoset, cytoset)}
  
  \code{   rbind2(cytoset, cytoframe)}
  
}

\item{spillover}{Compute spillover matrix from a compensation
  set. See separate documentation for details.
}

\item{shallow_copy}{Returns a new \code{cytoset} that points to the same
underlying data as the original
  
\emph{Usage:}
    
\code{shallow_copy(cytoset)}
  
}
\item{realize_view}{Returns a new \code{cytoset} with its own copy of the
underlying data (a deep copy). The optional \code{filepath} argument accepts
a string to specify a full directory name for storing the new copies of the data 
from the FCS files in h5 format.
  
  \emph{Usage:}
    
  \code{realize_view(cytoset, filepath)}
}
\item{cs_add_sample}{Adds a \code{cytoframe} to the \code{cytoset} with sample name given
by a string.

  \emph{Usage:}
  
  \code{cs_add_sample(cytoset, "SampleName", cytoframe)}
}
}
}

