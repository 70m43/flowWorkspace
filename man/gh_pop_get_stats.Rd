% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getStats.R
\docType{methods}
\name{getStats}
\alias{getStats}
\alias{getProp}
\alias{getTotal}
\alias{getPopStats,GatingHierarchy-method}
\alias{gh_pop_compare_stats}
\alias{gh_plot_pop_count_cv}
\title{Exact MFI from populations(or nodes) for all the markers}
\usage{
getStats(x, ...)

getProp(x, y, xml = FALSE)

getTotal(x, y, xml = FALSE)

\S4method{getPopStats}{GatingHierarchy}(x, path = "auto", ...)

gh_pop_compare_stats(x, path = "auto", ...)

gh_plot_pop_count_cv(x, m = 2, n = 2, path = "auto", ...)
}
\arguments{
\item{x}{a GatingSet or GatingHierarchy}

\item{...}{arguments passed to \link{gs_get_pop_paths} method.}

\item{y}{\code{character} node name or path}
}
\value{
a data.table that contains MFI values for each marker per column along with 'pop' column and 'sample' column (when used on a 'GatingSet')
}
\description{
It calculates the MFI for each marker.
}
\examples{
\dontrun{
dataDir <- system.file("extdata",package="flowWorkspaceData")
suppressMessages(gs <- load_gs(list.files(dataDir, pattern = "gs_manual",full = TRUE)))

# get stats all nodes
dt <- gs_pop_get_stats(gs) #default is "count"

nodes <- c("CD4", "CD8")
gs_pop_get_stats(gs, nodes, "percent")

# pass a build-in function
gs_pop_get_stats(gs, nodes, type = pop.MFI)

# compute the stats based on the raw data scale
gs_pop_get_stats(gs, nodes, type = pop.MFI, inverse.transform = TRUE)

# supply user-defined stats fun
pop.quantiles <- function(fr){
   chnls <- colnames(fr)
   res <- matrixStats::colQuantiles(exprs(fr), probs = 0.75)
   names(res) <- chnls
   res
   }
gs_pop_get_stats(gs, nodes, type = pop.quantiles)
}
}
