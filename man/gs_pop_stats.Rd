% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getStats.R
\name{gs_pop_stats_print}
\alias{gs_pop_stats_print}
\alias{gh_pop_stats_print}
\alias{gh_pop_get_stats}
\alias{gs_pop_get_stats}
\alias{gh_pop_stats_compare}
\alias{gh_pop_compare_stats}
\alias{gh_pop_stats_compute}
\alias{gs_pop_stats_compute}
\alias{gh_pop_stats_ls}
\alias{gs_pop_stats_ls}
\alias{gh_pop_stats_add}
\alias{gs_pop_stats_add}
\alias{gh_pop_stats_remove}
\alias{gs_pop_stats_remove}
\title{Extract stats from populations(or nodes)}
\usage{
gs_pop_stats_print(gs, ...)

gh_pop_stats_print(
  gh,
  nodes = NULL,
  type = "Count",
  xml = FALSE,
  inverse.transform = FALSE,
  stats.fun.arg = list(),
  ...
)

gh_pop_get_stats(
  gh,
  nodes = NULL,
  type = "Count",
  xml = FALSE,
  inverse.transform = FALSE,
  stats.fun.arg = list(),
  ...
)

gs_pop_get_stats(gs, ...)

gh_pop_stats_compare(
  gh,
  nodes = NULL,
  path = "auto",
  type = c("Count"),
  legacy = FALSE,
  ...
)

gh_pop_compare_stats(...)

gh_pop_stats_compute(gh, node = "root")

gs_pop_stats_compute(gs, node = "root")

gh_pop_stats_ls(gh, node = NULL, ...)

gs_pop_stats_ls(gs, ...)

gh_pop_stats_add(gh, nodes = NULL, stats)

gs_pop_stats_add(gs, ...)

gh_pop_stats_remove(gh, nodes = NULL, stats)

gs_pop_stats_remove(gs, ...)
}
\arguments{
\item{gs}{a GatingSet}

\item{...}{not used}

\item{gh}{a GatingHierarchy}

\item{nodes}{the character vector specifies the populations of interest. default is all available nodes}

\item{type}{the character vector specifies the type of pop stats or
a function used to compute population stats.
when character, it is expected to be either "count" or "percent". Default is "count" (total number of events in the populations).
when a function,  it takes a flowFrame object through 'fr' argument and return the stats as a named vector.}

\item{xml}{whether to extract xml stats or openCyto stats}

\item{inverse.transform}{logical flag . Whether inverse transform the data before computing the stats.}

\item{stats.fun.arg}{a list of arguments passed to `type` when 'type' is a function.}

\item{path}{see \link{gs_get_pop_paths}}
}
\description{
To save time, some channel-specific stats such as mean, SD are not computed automatically at the time when they are added to GatingSet.
This function allows users to invoke this computation manually for the given population node and all its descendants.
}
\examples{
\dontrun{
dataDir <- system.file("extdata",package="flowWorkspaceData")
suppressMessages(gs <- load_gs(list.files(dataDir, pattern = "gs_manual",full = TRUE)))

# get stats all nodes
dt <- gs_pop_get_stats(gs) #default is "count"

nodes <- c("CD4", "CD8")
gs_pop_get_stats(gs, nodes, "percent")

# pass a build-in function
gs_pop_get_stats(gs, nodes, type = pop.MFI)

# compute the stats based on the raw data scale
gs_pop_get_stats(gs, nodes, type = pop.MFI, inverse.transform = TRUE)

# supply user-defined stats fun
pop.quantiles <- function(fr){
   chnls <- colnames(fr)
   res <- matrixStats::colQuantiles(exprs(fr), probs = 0.75)
   names(res) <- chnls
   res
   }
gs_pop_get_stats(gs, nodes, type = pop.quantiles)
}
}
